
-- Exercise 1.15.

-- The sine of an angle (specified in radians) can be computed by making
-- use of the approximation sin x x if x is sufficiently small,
-- and the trigonometric identity
-- https://mitpress.mit.edu/sicp/full-text/book/ch1-Z-G-19.gif
-- to reduce the size of the argument of sin. (For purposes of this exercise
-- an angle is considered ``sufficiently small'' if its magnitude is not
-- greater than 0.1 radians.) These ideas are incorporated in the following procedures:
--
-- (define (cube x) (* x x x))
-- (define (p x) (- (* 3 x) (* 4 (cube x))))
-- (define (sine angle)
--    (if (not (> (abs angle) 0.1))
--        angle
--        (p (sine (/ angle 3.0)))))
--
-- a.  How many times is the procedure p applied when (sine 12.15) is evaluated?
-- b.  What is the order of growth in space and number of steps (as a function of a)
-- used by the process generated by the sine procedure when (sine a) is evaluated? 

cube :: Float -> Float
cube x = x * x * x

p :: Float -> Float
p x = 3 * x - 4 * (cube x)

sine :: Float -> Int -> (Float, Int)
sine angle count
    | abs angle <= 0.1 = (angle, count)
    | otherwise = (p (fst lesser), snd lesser)
    where
        lesser = sine (angle / 3.0) (count + 1)

main :: IO ()
main = do
    print $ sine 12.15 0
